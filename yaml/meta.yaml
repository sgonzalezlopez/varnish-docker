apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: varnish-web-cache
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: "${APPLICATION_NAME}"
      name: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${APPLICATION_NAME}:latest
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: "${APPLICATION_NAME}"
      name: "${APPLICATION_NAME}"
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
        namespace: axamedla-skynet
    postCommit: {}
    resources: {}
    source:
      git:
        httpProxy: http://default-http-proxy.pink.eu-central-1.aws.openpaas.axa-cloud.com:8888
        httpsProxy: http://default-http-proxy.pink.eu-central-1.aws.openpaas.axa-cloud.com:8888
        ref: master
        uri: ${SOURCE_REPOSITORY_URL}
      secrets: null
      sourceSecret:
        name: basicsecret
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: http_proxy
          value: http://default-http-proxy.pink.eu-central-1.aws.openpaas.axa-cloud.com:8888
        - name: https_proxy
          value: http://default-http-proxy.pink.eu-central-1.aws.openpaas.axa-cloud.com:8888
        from:
          kind: DockerImage
          name: 'openshift/base-centos7:latest'
      type: Docker
    triggers:
    - github:
        secret: 071a4361027cdea6
      type: GitHub
    - generic:
        secret: d1839724dbd754ce
      type: Generic
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/deployment.cancelled: "25"
    creationTimestamp: null
    labels:
      name: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: VARNISH_BACKEND_PORT
            value: "8080"
          - name: VARNISH_BACKEND_IP
            value: 172.30.233.90
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - name: APPLICATION_NAME 
    description: Name of the application instance 
    value: "" 
    required: true 
  - name: SOURCE_REPOSITORY_URL 
    description: The URL of the repository with your application source code 
    value: https://github.axa.com/sergio-l-gonzalez/varnish-docker.git 
    required: true 
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook
    generate: expression 
    from: "[a-zA-Z0-9]{40}" 
  - name: BACKEND_IP
    description: Backend application IP to be cached
    value: application_addr 
    required: true	
  - name: BACKEND_PORT
    description: Backend application PORT to be cached
    value: "8080"
    required: true